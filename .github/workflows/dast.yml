name: Nightly Security Analysis
on:
  workflow_dispatch:

env:
  SCRIPT_RELATIVE_PATH: ".github/zap_json_to_sarif.py"
  URL_TO_SCAN: "https://kneeceinvestigations.com/"

jobs:
  dast-scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      #- uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Run OWASP Zap Scan on staging
        uses: zaproxy/action-full-scan@75ee1686750ab1511a73b26b77a2aedd295053ed # v0.12.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: ${{ env.URL_TO_SCAN }}
          allow_issue_writing: false
          fail_action: false
          clean: false
          cmd_options: '-I -l FAIL'

      #- name: Install Python and zap-cli
      #  run: |
      #    sudo apt-get install -y python3

      - name: Check out a conversion script to the runner
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4  
        with:
          sparse-checkout: ${{ env.SCRIPT_RELATIVE_PATH }}
          sparse-checkout-cone-mode: false

      #- name: Retrieve ZAP report in JSON format
      #  run: |
      #    mkdir -p zap-reports
      #    zap-cli --zap-url http://localhost --port 8080 report -o zap-reports/report.json -f json
  
      #- name: Add SARIF converter script
      #  run: |
      #    chmod +x tools/zap_json_to_sarif.py
  
      - name: Convert ZAP JSON to SARIF
        run: |
          pwd
          ls -Al
          chmod +x ${{ env.SCRIPT_RELATIVE_PATH }}
          python3 ${{ env.SCRIPT_RELATIVE_PATH }} ./report_json.json ./report.sarif
          ls -l ./report.sarif
      
      